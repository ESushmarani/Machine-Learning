import pandas as pd
import numpy as np
def entropy(target):
    values, counts = np.unique(target, return_counts=True)
    probabilities = counts / len(target)
    return -np.sum(probabilities * np.log2(probabilities))
def information_gain(data, attribute, target_name):
    total_entropy = entropy(data[target_name])
    values, counts = np.unique(data[attribute], return_counts=True)
    weighted_entropy = np.sum((counts[i] / np.sum(counts) *
                                entropy(data[data[attribute] == values[i]][target_name]))
                              for i in range(len(values)))
    return total_entropy - weighted_entropy
def id3(data, target_name, attributes):
    if len(np.unique(data[target_name])) == 1:
        return np.unique(data[target_name])[0]
    if len(attributes) == 0:
        return data[target_name].mode()[0]
    gains = [information_gain(data, attr, target_name) for attr in attributes]
    best_attr = attributes[np.argmax(gains)]
    tree = {best_attr: {}}
    values = np.unique(data[best_attr])
    for value in values:
        subset = data[data[best_attr] == value]
        subtree = id3(subset, target_name, [attr for attr in attributes if attr != best_attr])
        tree[best_attr][value] = subtree
    return tree
file_path = 'data.csv'
data = pd.read_csv("/content/data.csv.txt")
target_name = data.columns[-1]
attributes = list(data.columns[:-1])
decision_tree = id3(data, target_name, attributes)
print(decision_tree)
